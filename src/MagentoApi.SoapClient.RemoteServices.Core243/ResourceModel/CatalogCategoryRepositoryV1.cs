//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//
//     Änderungen an dieser Datei können fehlerhaftes Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class GenericFault
    {
        
        private string traceField;
        
        private GenericFaultParameter[] parametersField;
        
        private WrappedError[] wrappedErrorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Trace
        {
            get
            {
                return this.traceField;
            }
            set
            {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] Parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public WrappedError[] WrappedErrors
        {
            get
            {
                return this.wrappedErrorsField;
            }
            set
            {
                this.wrappedErrorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class GenericFaultParameter
    {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class WrappedError
    {
        
        private string messageField;
        
        private GenericFaultParameter[] parametersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class CatalogCategoryRepositoryV1DeleteByIdentifierResponse
    {
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public bool result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class CatalogCategoryRepositoryV1DeleteByIdentifierRequest
    {
        
        private int categoryIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int categoryId
        {
            get
            {
                return this.categoryIdField;
            }
            set
            {
                this.categoryIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1", ConfigurationName="Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRe" +
        "positoryV1.catalogCategoryRepositoryV1PortType")]
    public interface catalogCategoryRepositoryV1PortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="catalogCategoryRepositoryV1DeleteByIdentifier", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.GenericFault), Action="catalogCategoryRepositoryV1DeleteByIdentifier", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1DeleteByIdentifierResponse1> catalogCategoryRepositoryV1DeleteByIdentifierAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1DeleteByIdentifierRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="catalogCategoryRepositoryV1Get", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.GenericFault), Action="catalogCategoryRepositoryV1Get", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1GetResponse1> catalogCategoryRepositoryV1GetAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1GetRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="catalogCategoryRepositoryV1Save", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.GenericFault), Action="catalogCategoryRepositoryV1Save", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1SaveResponse1> catalogCategoryRepositoryV1SaveAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1SaveRequest1 request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryRepositoryV1DeleteByIdentifierRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
            "toryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1DeleteByIdentifierRequest catalogCategoryRepositoryV1DeleteByIdentifierRequest;
        
        public catalogCategoryRepositoryV1DeleteByIdentifierRequest1()
        {
        }
        
        public catalogCategoryRepositoryV1DeleteByIdentifierRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1DeleteByIdentifierRequest catalogCategoryRepositoryV1DeleteByIdentifierRequest)
        {
            this.catalogCategoryRepositoryV1DeleteByIdentifierRequest = catalogCategoryRepositoryV1DeleteByIdentifierRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryRepositoryV1DeleteByIdentifierResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
            "toryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1DeleteByIdentifierResponse catalogCategoryRepositoryV1DeleteByIdentifierResponse;
        
        public catalogCategoryRepositoryV1DeleteByIdentifierResponse1()
        {
        }
        
        public catalogCategoryRepositoryV1DeleteByIdentifierResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1DeleteByIdentifierResponse catalogCategoryRepositoryV1DeleteByIdentifierResponse)
        {
            this.catalogCategoryRepositoryV1DeleteByIdentifierResponse = catalogCategoryRepositoryV1DeleteByIdentifierResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class CatalogCategoryRepositoryV1GetRequest
    {
        
        private int categoryIdField;
        
        private int storeIdField;
        
        private bool storeIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int categoryId
        {
            get
            {
                return this.categoryIdField;
            }
            set
            {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int storeId
        {
            get
            {
                return this.storeIdField;
            }
            set
            {
                this.storeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool storeIdSpecified
        {
            get
            {
                return this.storeIdFieldSpecified;
            }
            set
            {
                this.storeIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class CatalogCategoryRepositoryV1GetResponse
    {
        
        private CatalogDataCategoryInterface resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public CatalogDataCategoryInterface result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class CatalogDataCategoryInterface
    {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int parentIdField;
        
        private bool parentIdFieldSpecified;
        
        private string nameField;
        
        private bool isActiveField;
        
        private bool isActiveFieldSpecified;
        
        private int positionField;
        
        private bool positionFieldSpecified;
        
        private int levelField;
        
        private bool levelFieldSpecified;
        
        private string childrenField;
        
        private string createdAtField;
        
        private string updatedAtField;
        
        private string pathField;
        
        private string[] availableSortByField;
        
        private bool includeInMenuField;
        
        private bool includeInMenuFieldSpecified;
        
        private CatalogDataCategoryExtensionInterface extensionAttributesField;
        
        private FrameworkAttributeInterface[] customAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int parentId
        {
            get
            {
                return this.parentIdField;
            }
            set
            {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parentIdSpecified
        {
            get
            {
                return this.parentIdFieldSpecified;
            }
            set
            {
                this.parentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public bool isActive
        {
            get
            {
                return this.isActiveField;
            }
            set
            {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isActiveSpecified
        {
            get
            {
                return this.isActiveFieldSpecified;
            }
            set
            {
                this.isActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public int position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positionSpecified
        {
            get
            {
                return this.positionFieldSpecified;
            }
            set
            {
                this.positionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public int level
        {
            get
            {
                return this.levelField;
            }
            set
            {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool levelSpecified
        {
            get
            {
                return this.levelFieldSpecified;
            }
            set
            {
                this.levelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string children
        {
            get
            {
                return this.childrenField;
            }
            set
            {
                this.childrenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string createdAt
        {
            get
            {
                return this.createdAtField;
            }
            set
            {
                this.createdAtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string updatedAt
        {
            get
            {
                return this.updatedAtField;
            }
            set
            {
                this.updatedAtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public string path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] availableSortBy
        {
            get
            {
                return this.availableSortByField;
            }
            set
            {
                this.availableSortByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public bool includeInMenu
        {
            get
            {
                return this.includeInMenuField;
            }
            set
            {
                this.includeInMenuField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool includeInMenuSpecified
        {
            get
            {
                return this.includeInMenuFieldSpecified;
            }
            set
            {
                this.includeInMenuFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12)]
        public CatalogDataCategoryExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public FrameworkAttributeInterface[] customAttributes
        {
            get
            {
                return this.customAttributesField;
            }
            set
            {
                this.customAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class CatalogDataCategoryExtensionInterface
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class FrameworkAttributeInterface
    {
        
        private string attributeCodeField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string attributeCode
        {
            get
            {
                return this.attributeCodeField;
            }
            set
            {
                this.attributeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public object value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryRepositoryV1GetRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
            "toryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1GetRequest catalogCategoryRepositoryV1GetRequest;
        
        public catalogCategoryRepositoryV1GetRequest1()
        {
        }
        
        public catalogCategoryRepositoryV1GetRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1GetRequest catalogCategoryRepositoryV1GetRequest)
        {
            this.catalogCategoryRepositoryV1GetRequest = catalogCategoryRepositoryV1GetRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryRepositoryV1GetResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
            "toryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1GetResponse catalogCategoryRepositoryV1GetResponse;
        
        public catalogCategoryRepositoryV1GetResponse1()
        {
        }
        
        public catalogCategoryRepositoryV1GetResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1GetResponse catalogCategoryRepositoryV1GetResponse)
        {
            this.catalogCategoryRepositoryV1GetResponse = catalogCategoryRepositoryV1GetResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class CatalogCategoryRepositoryV1SaveRequest
    {
        
        private CatalogDataCategoryInterface categoryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public CatalogDataCategoryInterface category
        {
            get
            {
                return this.categoryField;
            }
            set
            {
                this.categoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
        "toryV1")]
    public partial class CatalogCategoryRepositoryV1SaveResponse
    {
        
        private CatalogDataCategoryInterface resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public CatalogDataCategoryInterface result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryRepositoryV1SaveRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
            "toryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1SaveRequest catalogCategoryRepositoryV1SaveRequest;
        
        public catalogCategoryRepositoryV1SaveRequest1()
        {
        }
        
        public catalogCategoryRepositoryV1SaveRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1SaveRequest catalogCategoryRepositoryV1SaveRequest)
        {
            this.catalogCategoryRepositoryV1SaveRequest = catalogCategoryRepositoryV1SaveRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryRepositoryV1SaveResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
            "toryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1SaveResponse catalogCategoryRepositoryV1SaveResponse;
        
        public catalogCategoryRepositoryV1SaveResponse1()
        {
        }
        
        public catalogCategoryRepositoryV1SaveResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1SaveResponse catalogCategoryRepositoryV1SaveResponse)
        {
            this.catalogCategoryRepositoryV1SaveResponse = catalogCategoryRepositoryV1SaveResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public interface catalogCategoryRepositoryV1PortTypeChannel : Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1PortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public partial class catalogCategoryRepositoryV1PortTypeClient : System.ServiceModel.ClientBase<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1PortType>, Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1PortType
    {
        
        /// <summary>
        /// Implementieren Sie diese partielle Methode, um den Dienstendpunkt zu konfigurieren.
        /// </summary>
        /// <param name="serviceEndpoint">Der zu konfigurierende Endpunkt</param>
        /// <param name="clientCredentials">Die Clientanmeldeinformationen</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public catalogCategoryRepositoryV1PortTypeClient() : 
                base(catalogCategoryRepositoryV1PortTypeClient.GetDefaultBinding(), catalogCategoryRepositoryV1PortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.catalogCategoryRepositoryV1Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public catalogCategoryRepositoryV1PortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(catalogCategoryRepositoryV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), catalogCategoryRepositoryV1PortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public catalogCategoryRepositoryV1PortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(catalogCategoryRepositoryV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public catalogCategoryRepositoryV1PortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(catalogCategoryRepositoryV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public catalogCategoryRepositoryV1PortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1DeleteByIdentifierResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1PortType.catalogCategoryRepositoryV1DeleteByIdentifierAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1DeleteByIdentifierRequest1 request)
        {
            return base.Channel.catalogCategoryRepositoryV1DeleteByIdentifierAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1DeleteByIdentifierResponse1> catalogCategoryRepositoryV1DeleteByIdentifierAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1DeleteByIdentifierRequest catalogCategoryRepositoryV1DeleteByIdentifierRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1DeleteByIdentifierRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1DeleteByIdentifierRequest1();
            inValue.catalogCategoryRepositoryV1DeleteByIdentifierRequest = catalogCategoryRepositoryV1DeleteByIdentifierRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1PortType)(this)).catalogCategoryRepositoryV1DeleteByIdentifierAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1GetResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1PortType.catalogCategoryRepositoryV1GetAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1GetRequest1 request)
        {
            return base.Channel.catalogCategoryRepositoryV1GetAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1GetResponse1> catalogCategoryRepositoryV1GetAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1GetRequest catalogCategoryRepositoryV1GetRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1GetRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1GetRequest1();
            inValue.catalogCategoryRepositoryV1GetRequest = catalogCategoryRepositoryV1GetRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1PortType)(this)).catalogCategoryRepositoryV1GetAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1SaveResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1PortType.catalogCategoryRepositoryV1SaveAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1SaveRequest1 request)
        {
            return base.Channel.catalogCategoryRepositoryV1SaveAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1SaveResponse1> catalogCategoryRepositoryV1SaveAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.CatalogCategoryRepositoryV1SaveRequest catalogCategoryRepositoryV1SaveRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1SaveRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1SaveRequest1();
            inValue.catalogCategoryRepositoryV1SaveRequest = catalogCategoryRepositoryV1SaveRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryRepositoryV1.catalogCategoryRepositoryV1PortType)(this)).catalogCategoryRepositoryV1SaveAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.catalogCategoryRepositoryV1Port))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.catalogCategoryRepositoryV1Port))
            {
                return new System.ServiceModel.EndpointAddress("http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryReposi" +
                        "toryV1");
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return catalogCategoryRepositoryV1PortTypeClient.GetBindingForEndpoint(EndpointConfiguration.catalogCategoryRepositoryV1Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return catalogCategoryRepositoryV1PortTypeClient.GetEndpointAddress(EndpointConfiguration.catalogCategoryRepositoryV1Port);
        }
        
        public enum EndpointConfiguration
        {
            
            catalogCategoryRepositoryV1Port,
        }
    }
}
