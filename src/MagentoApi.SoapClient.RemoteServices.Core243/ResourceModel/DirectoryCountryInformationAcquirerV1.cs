//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//
//     Änderungen an dieser Datei können fehlerhaftes Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class GenericFault
    {
        
        private string traceField;
        
        private GenericFaultParameter[] parametersField;
        
        private WrappedError[] wrappedErrorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Trace
        {
            get
            {
                return this.traceField;
            }
            set
            {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] Parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public WrappedError[] WrappedErrors
        {
            get
            {
                return this.wrappedErrorsField;
            }
            set
            {
                this.wrappedErrorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class GenericFaultParameter
    {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class WrappedError
    {
        
        private string messageField;
        
        private GenericFaultParameter[] parametersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class DirectoryDataCountryInformationExtensionInterface
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class DirectoryDataRegionInformationExtensionInterface
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class DirectoryDataRegionInformationInterface
    {
        
        private string idField;
        
        private string codeField;
        
        private string nameField;
        
        private DirectoryDataRegionInformationExtensionInterface extensionAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public DirectoryDataRegionInformationExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class DirectoryDataCountryInformationInterface
    {
        
        private string idField;
        
        private string twoLetterAbbreviationField;
        
        private string threeLetterAbbreviationField;
        
        private string fullNameLocaleField;
        
        private string fullNameEnglishField;
        
        private DirectoryDataRegionInformationInterface[] availableRegionsField;
        
        private DirectoryDataCountryInformationExtensionInterface extensionAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string twoLetterAbbreviation
        {
            get
            {
                return this.twoLetterAbbreviationField;
            }
            set
            {
                this.twoLetterAbbreviationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string threeLetterAbbreviation
        {
            get
            {
                return this.threeLetterAbbreviationField;
            }
            set
            {
                this.threeLetterAbbreviationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string fullNameLocale
        {
            get
            {
                return this.fullNameLocaleField;
            }
            set
            {
                this.fullNameLocaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string fullNameEnglish
        {
            get
            {
                return this.fullNameEnglishField;
            }
            set
            {
                this.fullNameEnglishField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public DirectoryDataRegionInformationInterface[] availableRegions
        {
            get
            {
                return this.availableRegionsField;
            }
            set
            {
                this.availableRegionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public DirectoryDataCountryInformationExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class DirectoryCountryInformationAcquirerV1GetCountriesInfoResponse
    {
        
        private DirectoryDataCountryInformationInterface[] resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public DirectoryDataCountryInformationInterface[] result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class DirectoryCountryInformationAcquirerV1GetCountriesInfoRequest
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1", ConfigurationName="Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryI" +
        "nformationAcquirerV1.directoryCountryInformationAcquirerV1PortType")]
    public interface directoryCountryInformationAcquirerV1PortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="directoryCountryInformationAcquirerV1GetCountriesInfo", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.GenericFault), Action="directoryCountryInformationAcquirerV1GetCountriesInfo", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountriesInfoResponse1> directoryCountryInformationAcquirerV1GetCountriesInfoAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountriesInfoRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="directoryCountryInformationAcquirerV1GetCountryInfo", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.GenericFault), Action="directoryCountryInformationAcquirerV1GetCountryInfo", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountryInfoResponse1> directoryCountryInformationAcquirerV1GetCountryInfoAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountryInfoRequest1 request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class directoryCountryInformationAcquirerV1GetCountriesInfoRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
            "mationAcquirerV1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountriesInfoRequest directoryCountryInformationAcquirerV1GetCountriesInfoRequest;
        
        public directoryCountryInformationAcquirerV1GetCountriesInfoRequest1()
        {
        }
        
        public directoryCountryInformationAcquirerV1GetCountriesInfoRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountriesInfoRequest directoryCountryInformationAcquirerV1GetCountriesInfoRequest)
        {
            this.directoryCountryInformationAcquirerV1GetCountriesInfoRequest = directoryCountryInformationAcquirerV1GetCountriesInfoRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class directoryCountryInformationAcquirerV1GetCountriesInfoResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
            "mationAcquirerV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountriesInfoResponse directoryCountryInformationAcquirerV1GetCountriesInfoResponse;
        
        public directoryCountryInformationAcquirerV1GetCountriesInfoResponse1()
        {
        }
        
        public directoryCountryInformationAcquirerV1GetCountriesInfoResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountriesInfoResponse directoryCountryInformationAcquirerV1GetCountriesInfoResponse)
        {
            this.directoryCountryInformationAcquirerV1GetCountriesInfoResponse = directoryCountryInformationAcquirerV1GetCountriesInfoResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class DirectoryCountryInformationAcquirerV1GetCountryInfoRequest
    {
        
        private string countryIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string countryId
        {
            get
            {
                return this.countryIdField;
            }
            set
            {
                this.countryIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
        "mationAcquirerV1")]
    public partial class DirectoryCountryInformationAcquirerV1GetCountryInfoResponse
    {
        
        private DirectoryDataCountryInformationInterface resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public DirectoryDataCountryInformationInterface result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class directoryCountryInformationAcquirerV1GetCountryInfoRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
            "mationAcquirerV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountryInfoRequest directoryCountryInformationAcquirerV1GetCountryInfoRequest;
        
        public directoryCountryInformationAcquirerV1GetCountryInfoRequest1()
        {
        }
        
        public directoryCountryInformationAcquirerV1GetCountryInfoRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountryInfoRequest directoryCountryInformationAcquirerV1GetCountryInfoRequest)
        {
            this.directoryCountryInformationAcquirerV1GetCountryInfoRequest = directoryCountryInformationAcquirerV1GetCountryInfoRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class directoryCountryInformationAcquirerV1GetCountryInfoResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
            "mationAcquirerV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountryInfoResponse directoryCountryInformationAcquirerV1GetCountryInfoResponse;
        
        public directoryCountryInformationAcquirerV1GetCountryInfoResponse1()
        {
        }
        
        public directoryCountryInformationAcquirerV1GetCountryInfoResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountryInfoResponse directoryCountryInformationAcquirerV1GetCountryInfoResponse)
        {
            this.directoryCountryInformationAcquirerV1GetCountryInfoResponse = directoryCountryInformationAcquirerV1GetCountryInfoResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public interface directoryCountryInformationAcquirerV1PortTypeChannel : Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1PortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public partial class directoryCountryInformationAcquirerV1PortTypeClient : System.ServiceModel.ClientBase<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1PortType>, Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1PortType
    {
        
        /// <summary>
        /// Implementieren Sie diese partielle Methode, um den Dienstendpunkt zu konfigurieren.
        /// </summary>
        /// <param name="serviceEndpoint">Der zu konfigurierende Endpunkt</param>
        /// <param name="clientCredentials">Die Clientanmeldeinformationen</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public directoryCountryInformationAcquirerV1PortTypeClient() : 
                base(directoryCountryInformationAcquirerV1PortTypeClient.GetDefaultBinding(), directoryCountryInformationAcquirerV1PortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.directoryCountryInformationAcquirerV1Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public directoryCountryInformationAcquirerV1PortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(directoryCountryInformationAcquirerV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), directoryCountryInformationAcquirerV1PortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public directoryCountryInformationAcquirerV1PortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(directoryCountryInformationAcquirerV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public directoryCountryInformationAcquirerV1PortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(directoryCountryInformationAcquirerV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public directoryCountryInformationAcquirerV1PortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountriesInfoResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1PortType.directoryCountryInformationAcquirerV1GetCountriesInfoAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountriesInfoRequest1 request)
        {
            return base.Channel.directoryCountryInformationAcquirerV1GetCountriesInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountriesInfoResponse1> directoryCountryInformationAcquirerV1GetCountriesInfoAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountriesInfoRequest directoryCountryInformationAcquirerV1GetCountriesInfoRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountriesInfoRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountriesInfoRequest1();
            inValue.directoryCountryInformationAcquirerV1GetCountriesInfoRequest = directoryCountryInformationAcquirerV1GetCountriesInfoRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1PortType)(this)).directoryCountryInformationAcquirerV1GetCountriesInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountryInfoResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1PortType.directoryCountryInformationAcquirerV1GetCountryInfoAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountryInfoRequest1 request)
        {
            return base.Channel.directoryCountryInformationAcquirerV1GetCountryInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountryInfoResponse1> directoryCountryInformationAcquirerV1GetCountryInfoAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.DirectoryCountryInformationAcquirerV1GetCountryInfoRequest directoryCountryInformationAcquirerV1GetCountryInfoRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountryInfoRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1GetCountryInfoRequest1();
            inValue.directoryCountryInformationAcquirerV1GetCountryInfoRequest = directoryCountryInformationAcquirerV1GetCountryInfoRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.DirectoryCountryInformationAcquirerV1.directoryCountryInformationAcquirerV1PortType)(this)).directoryCountryInformationAcquirerV1GetCountryInfoAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.directoryCountryInformationAcquirerV1Port))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.directoryCountryInformationAcquirerV1Port))
            {
                return new System.ServiceModel.EndpointAddress("http://connector.monnier.cidev04.test/soap/default?services=directoryCountryInfor" +
                        "mationAcquirerV1");
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return directoryCountryInformationAcquirerV1PortTypeClient.GetBindingForEndpoint(EndpointConfiguration.directoryCountryInformationAcquirerV1Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return directoryCountryInformationAcquirerV1PortTypeClient.GetEndpointAddress(EndpointConfiguration.directoryCountryInformationAcquirerV1Port);
        }
        
        public enum EndpointConfiguration
        {
            
            directoryCountryInformationAcquirerV1Port,
        }
    }
}
