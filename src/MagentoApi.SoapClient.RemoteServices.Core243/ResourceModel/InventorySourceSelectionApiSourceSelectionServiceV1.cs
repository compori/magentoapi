//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//
//     Änderungen an dieser Datei können fehlerhaftes Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class GenericFault
    {
        
        private string traceField;
        
        private GenericFaultParameter[] parametersField;
        
        private WrappedError[] wrappedErrorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Trace
        {
            get
            {
                return this.traceField;
            }
            set
            {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] Parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public WrappedError[] WrappedErrors
        {
            get
            {
                return this.wrappedErrorsField;
            }
            set
            {
                this.wrappedErrorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class GenericFaultParameter
    {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class WrappedError
    {
        
        private string messageField;
        
        private GenericFaultParameter[] parametersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiDataSourceSelectionResultExtensionInterface
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiDataSourceSelectionItemExtensionInterface
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiDataSourceSelectionItemInterface
    {
        
        private string sourceCodeField;
        
        private string skuField;
        
        private float qtyToDeductField;
        
        private float qtyAvailableField;
        
        private InventorySourceSelectionApiDataSourceSelectionItemExtensionInterface extensionAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string sourceCode
        {
            get
            {
                return this.sourceCodeField;
            }
            set
            {
                this.sourceCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string sku
        {
            get
            {
                return this.skuField;
            }
            set
            {
                this.skuField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public float qtyToDeduct
        {
            get
            {
                return this.qtyToDeductField;
            }
            set
            {
                this.qtyToDeductField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public float qtyAvailable
        {
            get
            {
                return this.qtyAvailableField;
            }
            set
            {
                this.qtyAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public InventorySourceSelectionApiDataSourceSelectionItemExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiDataSourceSelectionResultInterface
    {
        
        private InventorySourceSelectionApiDataSourceSelectionItemInterface[] sourceSelectionItemsField;
        
        private bool shippableField;
        
        private InventorySourceSelectionApiDataSourceSelectionResultExtensionInterface extensionAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public InventorySourceSelectionApiDataSourceSelectionItemInterface[] sourceSelectionItems
        {
            get
            {
                return this.sourceSelectionItemsField;
            }
            set
            {
                this.sourceSelectionItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public bool shippable
        {
            get
            {
                return this.shippableField;
            }
            set
            {
                this.shippableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public InventorySourceSelectionApiDataSourceSelectionResultExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse
    {
        
        private InventorySourceSelectionApiDataSourceSelectionResultInterface resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public InventorySourceSelectionApiDataSourceSelectionResultInterface result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiDataAddressInterface
    {
        
        private string countryField;
        
        private string postcodeField;
        
        private string streetField;
        
        private string regionField;
        
        private string cityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string postcode
        {
            get
            {
                return this.postcodeField;
            }
            set
            {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string street
        {
            get
            {
                return this.streetField;
            }
            set
            {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string region
        {
            get
            {
                return this.regionField;
            }
            set
            {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string city
        {
            get
            {
                return this.cityField;
            }
            set
            {
                this.cityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiDataInventoryRequestExtensionInterface
    {
        
        private InventorySourceSelectionApiDataAddressInterface destinationAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public InventorySourceSelectionApiDataAddressInterface destinationAddress
        {
            get
            {
                return this.destinationAddressField;
            }
            set
            {
                this.destinationAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiDataItemRequestExtensionInterface
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiDataItemRequestInterface
    {
        
        private string skuField;
        
        private float qtyField;
        
        private InventorySourceSelectionApiDataItemRequestExtensionInterface extensionAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string sku
        {
            get
            {
                return this.skuField;
            }
            set
            {
                this.skuField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public float qty
        {
            get
            {
                return this.qtyField;
            }
            set
            {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public InventorySourceSelectionApiDataItemRequestExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiDataInventoryRequestInterface
    {
        
        private int stockIdField;
        
        private InventorySourceSelectionApiDataItemRequestInterface[] itemsField;
        
        private InventorySourceSelectionApiDataInventoryRequestExtensionInterface extensionAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int stockId
        {
            get
            {
                return this.stockIdField;
            }
            set
            {
                this.stockIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public InventorySourceSelectionApiDataItemRequestInterface[] items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public InventorySourceSelectionApiDataInventoryRequestExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1")]
    public partial class InventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest
    {
        
        private InventorySourceSelectionApiDataInventoryRequestInterface inventoryRequestField;
        
        private string algorithmCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public InventorySourceSelectionApiDataInventoryRequestInterface inventoryRequest
        {
            get
            {
                return this.inventoryRequestField;
            }
            set
            {
                this.inventoryRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string algorithmCode
        {
            get
            {
                return this.algorithmCodeField;
            }
            set
            {
                this.algorithmCodeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
        "ionApiSourceSelectionServiceV1", ConfigurationName="Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSe" +
        "lectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionSer" +
        "viceV1PortType")]
    public interface inventorySourceSelectionApiSourceSelectionServiceV1PortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="inventorySourceSelectionApiSourceSelectionServiceV1Execute", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.GenericFault), Action="inventorySourceSelectionApiSourceSelectionServiceV1Execute", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse1> inventorySourceSelectionApiSourceSelectionServiceV1ExecuteAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest1 request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
            "ionApiSourceSelectionServiceV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.InventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest;
        
        public inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest1()
        {
        }
        
        public inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.InventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest)
        {
            this.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest = inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
            "ionApiSourceSelectionServiceV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.InventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse;
        
        public inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse1()
        {
        }
        
        public inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.InventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse)
        {
            this.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse = inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public interface inventorySourceSelectionApiSourceSelectionServiceV1PortTypeChannel : Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1PortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public partial class inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient : System.ServiceModel.ClientBase<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1PortType>, Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1PortType
    {
        
        /// <summary>
        /// Implementieren Sie diese partielle Methode, um den Dienstendpunkt zu konfigurieren.
        /// </summary>
        /// <param name="serviceEndpoint">Der zu konfigurierende Endpunkt</param>
        /// <param name="clientCredentials">Die Clientanmeldeinformationen</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient() : 
                base(inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient.GetDefaultBinding(), inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.inventorySourceSelectionApiSourceSelectionServiceV1Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1PortType.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest1 request)
        {
            return base.Channel.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteResponse1> inventorySourceSelectionApiSourceSelectionServiceV1ExecuteAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.InventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest1();
            inValue.inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest = inventorySourceSelectionApiSourceSelectionServiceV1ExecuteRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.InventorySourceSelectionApiSourceSelectionServiceV1.inventorySourceSelectionApiSourceSelectionServiceV1PortType)(this)).inventorySourceSelectionApiSourceSelectionServiceV1ExecuteAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.inventorySourceSelectionApiSourceSelectionServiceV1Port))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.inventorySourceSelectionApiSourceSelectionServiceV1Port))
            {
                return new System.ServiceModel.EndpointAddress("http://connector.monnier.cidev04.test/soap/default?services=inventorySourceSelect" +
                        "ionApiSourceSelectionServiceV1");
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient.GetBindingForEndpoint(EndpointConfiguration.inventorySourceSelectionApiSourceSelectionServiceV1Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return inventorySourceSelectionApiSourceSelectionServiceV1PortTypeClient.GetEndpointAddress(EndpointConfiguration.inventorySourceSelectionApiSourceSelectionServiceV1Port);
        }
        
        public enum EndpointConfiguration
        {
            
            inventorySourceSelectionApiSourceSelectionServiceV1Port,
        }
    }
}
