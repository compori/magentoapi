//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//
//     Änderungen an dieser Datei können fehlerhaftes Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class GenericFault
    {
        
        private string traceField;
        
        private GenericFaultParameter[] parametersField;
        
        private WrappedError[] wrappedErrorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Trace
        {
            get
            {
                return this.traceField;
            }
            set
            {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] Parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public WrappedError[] WrappedErrors
        {
            get
            {
                return this.wrappedErrorsField;
            }
            set
            {
                this.wrappedErrorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class GenericFaultParameter
    {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class WrappedError
    {
        
        private string messageField;
        
        private GenericFaultParameter[] parametersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiAssetRepositoryV1DeleteByIdRequest
    {
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1", ConfigurationName="Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetAp" +
        "iAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType")]
    public interface adobeStockAssetApiAssetRepositoryV1PortType
    {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="adobeStockAssetApiAssetRepositoryV1DeleteById")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.GenericFault), Action="adobeStockAssetApiAssetRepositoryV1DeleteById", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task adobeStockAssetApiAssetRepositoryV1DeleteByIdAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1DeleteById request);
        
        [System.ServiceModel.OperationContractAttribute(Action="adobeStockAssetApiAssetRepositoryV1GetById", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.GenericFault), Action="adobeStockAssetApiAssetRepositoryV1GetById", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetByIdResponse1> adobeStockAssetApiAssetRepositoryV1GetByIdAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetByIdRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="adobeStockAssetApiAssetRepositoryV1GetList", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.GenericFault), Action="adobeStockAssetApiAssetRepositoryV1GetList", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetListResponse1> adobeStockAssetApiAssetRepositoryV1GetListAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetListRequest1 request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class adobeStockAssetApiAssetRepositoryV1DeleteById
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
            "etRepositoryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1DeleteByIdRequest adobeStockAssetApiAssetRepositoryV1DeleteByIdRequest;
        
        public adobeStockAssetApiAssetRepositoryV1DeleteById()
        {
        }
        
        public adobeStockAssetApiAssetRepositoryV1DeleteById(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1DeleteByIdRequest adobeStockAssetApiAssetRepositoryV1DeleteByIdRequest)
        {
            this.adobeStockAssetApiAssetRepositoryV1DeleteByIdRequest = adobeStockAssetApiAssetRepositoryV1DeleteByIdRequest;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiAssetRepositoryV1GetByIdRequest
    {
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiAssetRepositoryV1GetByIdResponse
    {
        
        private AdobeStockAssetApiDataAssetInterface resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public AdobeStockAssetApiDataAssetInterface result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiDataAssetInterface
    {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int mediaGalleryIdField;
        
        private int categoryIdField;
        
        private bool categoryIdFieldSpecified;
        
        private AdobeStockAssetApiDataCategoryInterface categoryField;
        
        private int creatorIdField;
        
        private bool creatorIdFieldSpecified;
        
        private AdobeStockAssetApiDataCreatorInterface creatorField;
        
        private int isLicensedField;
        
        private string creationDateField;
        
        private AdobeStockAssetApiDataAssetExtensionInterface extensionAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int mediaGalleryId
        {
            get
            {
                return this.mediaGalleryIdField;
            }
            set
            {
                this.mediaGalleryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int categoryId
        {
            get
            {
                return this.categoryIdField;
            }
            set
            {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool categoryIdSpecified
        {
            get
            {
                return this.categoryIdFieldSpecified;
            }
            set
            {
                this.categoryIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public AdobeStockAssetApiDataCategoryInterface category
        {
            get
            {
                return this.categoryField;
            }
            set
            {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public int creatorId
        {
            get
            {
                return this.creatorIdField;
            }
            set
            {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creatorIdSpecified
        {
            get
            {
                return this.creatorIdFieldSpecified;
            }
            set
            {
                this.creatorIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public AdobeStockAssetApiDataCreatorInterface creator
        {
            get
            {
                return this.creatorField;
            }
            set
            {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public int isLicensed
        {
            get
            {
                return this.isLicensedField;
            }
            set
            {
                this.isLicensedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string creationDate
        {
            get
            {
                return this.creationDateField;
            }
            set
            {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public AdobeStockAssetApiDataAssetExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiDataCategoryInterface
    {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private AdobeStockAssetApiDataCategoryExtensionInterface extensionAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public AdobeStockAssetApiDataCategoryExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiDataCategoryExtensionInterface
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiDataCreatorInterface
    {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private AdobeStockAssetApiDataCreatorExtensionInterface extensionAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public AdobeStockAssetApiDataCreatorExtensionInterface extensionAttributes
        {
            get
            {
                return this.extensionAttributesField;
            }
            set
            {
                this.extensionAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiDataCreatorExtensionInterface
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiDataAssetExtensionInterface
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class adobeStockAssetApiAssetRepositoryV1GetByIdRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
            "etRepositoryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetByIdRequest adobeStockAssetApiAssetRepositoryV1GetByIdRequest;
        
        public adobeStockAssetApiAssetRepositoryV1GetByIdRequest1()
        {
        }
        
        public adobeStockAssetApiAssetRepositoryV1GetByIdRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetByIdRequest adobeStockAssetApiAssetRepositoryV1GetByIdRequest)
        {
            this.adobeStockAssetApiAssetRepositoryV1GetByIdRequest = adobeStockAssetApiAssetRepositoryV1GetByIdRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class adobeStockAssetApiAssetRepositoryV1GetByIdResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
            "etRepositoryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetByIdResponse adobeStockAssetApiAssetRepositoryV1GetByIdResponse;
        
        public adobeStockAssetApiAssetRepositoryV1GetByIdResponse1()
        {
        }
        
        public adobeStockAssetApiAssetRepositoryV1GetByIdResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetByIdResponse adobeStockAssetApiAssetRepositoryV1GetByIdResponse)
        {
            this.adobeStockAssetApiAssetRepositoryV1GetByIdResponse = adobeStockAssetApiAssetRepositoryV1GetByIdResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiAssetRepositoryV1GetListRequest
    {
        
        private FrameworkSearchCriteriaInterface searchCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public FrameworkSearchCriteriaInterface searchCriteria
        {
            get
            {
                return this.searchCriteriaField;
            }
            set
            {
                this.searchCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class FrameworkSearchCriteriaInterface
    {
        
        private FrameworkSearchFilterGroup[] filterGroupsField;
        
        private FrameworkSortOrder[] sortOrdersField;
        
        private int pageSizeField;
        
        private bool pageSizeFieldSpecified;
        
        private int currentPageField;
        
        private bool currentPageFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public FrameworkSearchFilterGroup[] filterGroups
        {
            get
            {
                return this.filterGroupsField;
            }
            set
            {
                this.filterGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public FrameworkSortOrder[] sortOrders
        {
            get
            {
                return this.sortOrdersField;
            }
            set
            {
                this.sortOrdersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int pageSize
        {
            get
            {
                return this.pageSizeField;
            }
            set
            {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageSizeSpecified
        {
            get
            {
                return this.pageSizeFieldSpecified;
            }
            set
            {
                this.pageSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public int currentPage
        {
            get
            {
                return this.currentPageField;
            }
            set
            {
                this.currentPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currentPageSpecified
        {
            get
            {
                return this.currentPageFieldSpecified;
            }
            set
            {
                this.currentPageFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class FrameworkSearchFilterGroup
    {
        
        private FrameworkFilter[] filtersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public FrameworkFilter[] filters
        {
            get
            {
                return this.filtersField;
            }
            set
            {
                this.filtersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class FrameworkFilter
    {
        
        private string fieldField;
        
        private string valueField;
        
        private string conditionTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string conditionType
        {
            get
            {
                return this.conditionTypeField;
            }
            set
            {
                this.conditionTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class FrameworkSortOrder
    {
        
        private string fieldField;
        
        private string directionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string direction
        {
            get
            {
                return this.directionField;
            }
            set
            {
                this.directionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiAssetRepositoryV1GetListResponse
    {
        
        private AdobeStockAssetApiDataAssetSearchResultsInterface resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public AdobeStockAssetApiDataAssetSearchResultsInterface result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
        "etRepositoryV1")]
    public partial class AdobeStockAssetApiDataAssetSearchResultsInterface
    {
        
        private AdobeStockAssetApiDataAssetInterface[] itemsField;
        
        private FrameworkSearchCriteriaInterface searchCriteriaField;
        
        private int totalCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AdobeStockAssetApiDataAssetInterface[] items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public FrameworkSearchCriteriaInterface searchCriteria
        {
            get
            {
                return this.searchCriteriaField;
            }
            set
            {
                this.searchCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int totalCount
        {
            get
            {
                return this.totalCountField;
            }
            set
            {
                this.totalCountField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class adobeStockAssetApiAssetRepositoryV1GetListRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
            "etRepositoryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetListRequest adobeStockAssetApiAssetRepositoryV1GetListRequest;
        
        public adobeStockAssetApiAssetRepositoryV1GetListRequest1()
        {
        }
        
        public adobeStockAssetApiAssetRepositoryV1GetListRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetListRequest adobeStockAssetApiAssetRepositoryV1GetListRequest)
        {
            this.adobeStockAssetApiAssetRepositoryV1GetListRequest = adobeStockAssetApiAssetRepositoryV1GetListRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class adobeStockAssetApiAssetRepositoryV1GetListResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
            "etRepositoryV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetListResponse adobeStockAssetApiAssetRepositoryV1GetListResponse;
        
        public adobeStockAssetApiAssetRepositoryV1GetListResponse1()
        {
        }
        
        public adobeStockAssetApiAssetRepositoryV1GetListResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetListResponse adobeStockAssetApiAssetRepositoryV1GetListResponse)
        {
            this.adobeStockAssetApiAssetRepositoryV1GetListResponse = adobeStockAssetApiAssetRepositoryV1GetListResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public interface adobeStockAssetApiAssetRepositoryV1PortTypeChannel : Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public partial class adobeStockAssetApiAssetRepositoryV1PortTypeClient : System.ServiceModel.ClientBase<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType>, Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType
    {
        
        /// <summary>
        /// Implementieren Sie diese partielle Methode, um den Dienstendpunkt zu konfigurieren.
        /// </summary>
        /// <param name="serviceEndpoint">Der zu konfigurierende Endpunkt</param>
        /// <param name="clientCredentials">Die Clientanmeldeinformationen</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public adobeStockAssetApiAssetRepositoryV1PortTypeClient() : 
                base(adobeStockAssetApiAssetRepositoryV1PortTypeClient.GetDefaultBinding(), adobeStockAssetApiAssetRepositoryV1PortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.adobeStockAssetApiAssetRepositoryV1Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public adobeStockAssetApiAssetRepositoryV1PortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(adobeStockAssetApiAssetRepositoryV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), adobeStockAssetApiAssetRepositoryV1PortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public adobeStockAssetApiAssetRepositoryV1PortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(adobeStockAssetApiAssetRepositoryV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public adobeStockAssetApiAssetRepositoryV1PortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(adobeStockAssetApiAssetRepositoryV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public adobeStockAssetApiAssetRepositoryV1PortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType.adobeStockAssetApiAssetRepositoryV1DeleteByIdAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1DeleteById request)
        {
            return base.Channel.adobeStockAssetApiAssetRepositoryV1DeleteByIdAsync(request);
        }
        
        public System.Threading.Tasks.Task adobeStockAssetApiAssetRepositoryV1DeleteByIdAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1DeleteByIdRequest adobeStockAssetApiAssetRepositoryV1DeleteByIdRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1DeleteById inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1DeleteById();
            inValue.adobeStockAssetApiAssetRepositoryV1DeleteByIdRequest = adobeStockAssetApiAssetRepositoryV1DeleteByIdRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType)(this)).adobeStockAssetApiAssetRepositoryV1DeleteByIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetByIdResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType.adobeStockAssetApiAssetRepositoryV1GetByIdAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetByIdRequest1 request)
        {
            return base.Channel.adobeStockAssetApiAssetRepositoryV1GetByIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetByIdResponse1> adobeStockAssetApiAssetRepositoryV1GetByIdAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetByIdRequest adobeStockAssetApiAssetRepositoryV1GetByIdRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetByIdRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetByIdRequest1();
            inValue.adobeStockAssetApiAssetRepositoryV1GetByIdRequest = adobeStockAssetApiAssetRepositoryV1GetByIdRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType)(this)).adobeStockAssetApiAssetRepositoryV1GetByIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetListResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType.adobeStockAssetApiAssetRepositoryV1GetListAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetListRequest1 request)
        {
            return base.Channel.adobeStockAssetApiAssetRepositoryV1GetListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetListResponse1> adobeStockAssetApiAssetRepositoryV1GetListAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.AdobeStockAssetApiAssetRepositoryV1GetListRequest adobeStockAssetApiAssetRepositoryV1GetListRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetListRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1GetListRequest1();
            inValue.adobeStockAssetApiAssetRepositoryV1GetListRequest = adobeStockAssetApiAssetRepositoryV1GetListRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.AdobeStockAssetApiAssetRepositoryV1.adobeStockAssetApiAssetRepositoryV1PortType)(this)).adobeStockAssetApiAssetRepositoryV1GetListAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.adobeStockAssetApiAssetRepositoryV1Port))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.adobeStockAssetApiAssetRepositoryV1Port))
            {
                return new System.ServiceModel.EndpointAddress("http://connector.monnier.cidev04.test/soap/default?services=adobeStockAssetApiAss" +
                        "etRepositoryV1");
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return adobeStockAssetApiAssetRepositoryV1PortTypeClient.GetBindingForEndpoint(EndpointConfiguration.adobeStockAssetApiAssetRepositoryV1Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return adobeStockAssetApiAssetRepositoryV1PortTypeClient.GetEndpointAddress(EndpointConfiguration.adobeStockAssetApiAssetRepositoryV1Port);
        }
        
        public enum EndpointConfiguration
        {
            
            adobeStockAssetApiAssetRepositoryV1Port,
        }
    }
}
