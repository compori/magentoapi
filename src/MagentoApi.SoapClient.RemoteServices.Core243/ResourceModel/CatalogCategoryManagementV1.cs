//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//
//     Änderungen an dieser Datei können fehlerhaftes Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
        "mentV1")]
    public partial class GenericFault
    {
        
        private string traceField;
        
        private GenericFaultParameter[] parametersField;
        
        private WrappedError[] wrappedErrorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Trace
        {
            get
            {
                return this.traceField;
            }
            set
            {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] Parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public WrappedError[] WrappedErrors
        {
            get
            {
                return this.wrappedErrorsField;
            }
            set
            {
                this.wrappedErrorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
        "mentV1")]
    public partial class GenericFaultParameter
    {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
        "mentV1")]
    public partial class WrappedError
    {
        
        private string messageField;
        
        private GenericFaultParameter[] parametersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GenericFaultParameter[] parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
        "mentV1")]
    public partial class CatalogDataCategoryTreeInterface
    {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int parentIdField;
        
        private string nameField;
        
        private bool isActiveField;
        
        private int positionField;
        
        private int levelField;
        
        private int productCountField;
        
        private CatalogDataCategoryTreeInterface[] childrenDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int parentId
        {
            get
            {
                return this.parentIdField;
            }
            set
            {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public bool isActive
        {
            get
            {
                return this.isActiveField;
            }
            set
            {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public int position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public int level
        {
            get
            {
                return this.levelField;
            }
            set
            {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public int productCount
        {
            get
            {
                return this.productCountField;
            }
            set
            {
                this.productCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CatalogDataCategoryTreeInterface[] childrenData
        {
            get
            {
                return this.childrenDataField;
            }
            set
            {
                this.childrenDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
        "mentV1")]
    public partial class CatalogCategoryManagementV1GetTreeResponse
    {
        
        private CatalogDataCategoryTreeInterface resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public CatalogDataCategoryTreeInterface result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
        "mentV1")]
    public partial class CatalogCategoryManagementV1GetTreeRequest
    {
        
        private int rootCategoryIdField;
        
        private bool rootCategoryIdFieldSpecified;
        
        private int depthField;
        
        private bool depthFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int rootCategoryId
        {
            get
            {
                return this.rootCategoryIdField;
            }
            set
            {
                this.rootCategoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rootCategoryIdSpecified
        {
            get
            {
                return this.rootCategoryIdFieldSpecified;
            }
            set
            {
                this.rootCategoryIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int depth
        {
            get
            {
                return this.depthField;
            }
            set
            {
                this.depthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool depthSpecified
        {
            get
            {
                return this.depthFieldSpecified;
            }
            set
            {
                this.depthFieldSpecified = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
        "mentV1", ConfigurationName="Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryMa" +
        "nagementV1.catalogCategoryManagementV1PortType")]
    public interface catalogCategoryManagementV1PortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="catalogCategoryManagementV1GetTree", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.GenericFault), Action="catalogCategoryManagementV1GetTree", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1GetTreeResponse1> catalogCategoryManagementV1GetTreeAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1GetTreeRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="catalogCategoryManagementV1Move", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.GenericFault), Action="catalogCategoryManagementV1Move", Name="GenericFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1MoveResponse1> catalogCategoryManagementV1MoveAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1MoveRequest1 request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryManagementV1GetTreeRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
            "mentV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1GetTreeRequest catalogCategoryManagementV1GetTreeRequest;
        
        public catalogCategoryManagementV1GetTreeRequest1()
        {
        }
        
        public catalogCategoryManagementV1GetTreeRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1GetTreeRequest catalogCategoryManagementV1GetTreeRequest)
        {
            this.catalogCategoryManagementV1GetTreeRequest = catalogCategoryManagementV1GetTreeRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryManagementV1GetTreeResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
            "mentV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1GetTreeResponse catalogCategoryManagementV1GetTreeResponse;
        
        public catalogCategoryManagementV1GetTreeResponse1()
        {
        }
        
        public catalogCategoryManagementV1GetTreeResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1GetTreeResponse catalogCategoryManagementV1GetTreeResponse)
        {
            this.catalogCategoryManagementV1GetTreeResponse = catalogCategoryManagementV1GetTreeResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
        "mentV1")]
    public partial class CatalogCategoryManagementV1MoveRequest
    {
        
        private int categoryIdField;
        
        private int parentIdField;
        
        private int afterIdField;
        
        private bool afterIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int categoryId
        {
            get
            {
                return this.categoryIdField;
            }
            set
            {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int parentId
        {
            get
            {
                return this.parentIdField;
            }
            set
            {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int afterId
        {
            get
            {
                return this.afterIdField;
            }
            set
            {
                this.afterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool afterIdSpecified
        {
            get
            {
                return this.afterIdFieldSpecified;
            }
            set
            {
                this.afterIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
        "mentV1")]
    public partial class CatalogCategoryManagementV1MoveResponse
    {
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public bool result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryManagementV1MoveRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
            "mentV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1MoveRequest catalogCategoryManagementV1MoveRequest;
        
        public catalogCategoryManagementV1MoveRequest1()
        {
        }
        
        public catalogCategoryManagementV1MoveRequest1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1MoveRequest catalogCategoryManagementV1MoveRequest)
        {
            this.catalogCategoryManagementV1MoveRequest = catalogCategoryManagementV1MoveRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class catalogCategoryManagementV1MoveResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
            "mentV1", Order=0)]
        public Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1MoveResponse catalogCategoryManagementV1MoveResponse;
        
        public catalogCategoryManagementV1MoveResponse1()
        {
        }
        
        public catalogCategoryManagementV1MoveResponse1(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1MoveResponse catalogCategoryManagementV1MoveResponse)
        {
            this.catalogCategoryManagementV1MoveResponse = catalogCategoryManagementV1MoveResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public interface catalogCategoryManagementV1PortTypeChannel : Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1PortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
    public partial class catalogCategoryManagementV1PortTypeClient : System.ServiceModel.ClientBase<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1PortType>, Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1PortType
    {
        
        /// <summary>
        /// Implementieren Sie diese partielle Methode, um den Dienstendpunkt zu konfigurieren.
        /// </summary>
        /// <param name="serviceEndpoint">Der zu konfigurierende Endpunkt</param>
        /// <param name="clientCredentials">Die Clientanmeldeinformationen</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public catalogCategoryManagementV1PortTypeClient() : 
                base(catalogCategoryManagementV1PortTypeClient.GetDefaultBinding(), catalogCategoryManagementV1PortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.catalogCategoryManagementV1Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public catalogCategoryManagementV1PortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(catalogCategoryManagementV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), catalogCategoryManagementV1PortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public catalogCategoryManagementV1PortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(catalogCategoryManagementV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public catalogCategoryManagementV1PortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(catalogCategoryManagementV1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public catalogCategoryManagementV1PortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1GetTreeResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1PortType.catalogCategoryManagementV1GetTreeAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1GetTreeRequest1 request)
        {
            return base.Channel.catalogCategoryManagementV1GetTreeAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1GetTreeResponse1> catalogCategoryManagementV1GetTreeAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1GetTreeRequest catalogCategoryManagementV1GetTreeRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1GetTreeRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1GetTreeRequest1();
            inValue.catalogCategoryManagementV1GetTreeRequest = catalogCategoryManagementV1GetTreeRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1PortType)(this)).catalogCategoryManagementV1GetTreeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1MoveResponse1> Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1PortType.catalogCategoryManagementV1MoveAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1MoveRequest1 request)
        {
            return base.Channel.catalogCategoryManagementV1MoveAsync(request);
        }
        
        public System.Threading.Tasks.Task<Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1MoveResponse1> catalogCategoryManagementV1MoveAsync(Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.CatalogCategoryManagementV1MoveRequest catalogCategoryManagementV1MoveRequest)
        {
            Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1MoveRequest1 inValue = new Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1MoveRequest1();
            inValue.catalogCategoryManagementV1MoveRequest = catalogCategoryManagementV1MoveRequest;
            return ((Compori.MagentoApi.SoapClient.RemoteServices.Core.ResourceModel.CatalogCategoryManagementV1.catalogCategoryManagementV1PortType)(this)).catalogCategoryManagementV1MoveAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.catalogCategoryManagementV1Port))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.catalogCategoryManagementV1Port))
            {
                return new System.ServiceModel.EndpointAddress("http://connector.monnier.cidev04.test/soap/default?services=catalogCategoryManage" +
                        "mentV1");
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return catalogCategoryManagementV1PortTypeClient.GetBindingForEndpoint(EndpointConfiguration.catalogCategoryManagementV1Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return catalogCategoryManagementV1PortTypeClient.GetEndpointAddress(EndpointConfiguration.catalogCategoryManagementV1Port);
        }
        
        public enum EndpointConfiguration
        {
            
            catalogCategoryManagementV1Port,
        }
    }
}
